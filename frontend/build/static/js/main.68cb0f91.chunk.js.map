{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Meta.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILURE","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILURE","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILURE","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILURE","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILURE","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILURE","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAILURE","PRODUCT_UPDATE_IS_ACTIVE_REQUEST","PRODUCT_UPDATE_IS_ACTIVE_SUCCESS","PRODUCT_UPDATE_IS_ACTIVE_FAILURE","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILURE","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILURE","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAILURE","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILURE","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILURE","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userList","users","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","productTopRated","productUpdateIsActive","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","history","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","isAdmin","NavDropdown","title","Item","onClick","removeItem","Footer","Row","Col","href","Meta","description","keywords","Helmet","name","content","defaultProps","Product","Card","Body","_id","Title","as","Text","price","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","Paginate","keyword","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","HomeScreen","match","params","useEffect","Image","src","fluid","Jumbotron","isCash","sm","md","lg","xl","thumbnail","ProductScreen","useState","qty","setQty","image","alt","ListGroup","Form","Control","min","placeholder","value","onChange","e","target","Button","push","addToCart","countInStock","squareCatalogId","squareTaxId","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","checkoutHandler","post","result","net_amounts","length","rounded","reduce","acc","cur","toFixed","disabled","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","login","Group","controlId","Label","RegisterScreen","confirmPassword","setConfirmPassword","setName","setMessage","register","controlID","createOrder","getOrderDetails","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","recipient","createdAt","substring","totalPrice","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderState","calculatedOrder","Error","nonceErrors","setNonceErrors","zipCode","setZipCode","setState","setRecipient","addDecimals","num","Math","round","itemsPrice","accum","taxPrice","tax_money","amount","total_money","cardNonceResponseReceived","errors","nonce","cardData","buyerVerificationToken","billingInfo","zip","payment","status","paymentResult","updated_at","order_id","receipt_url","index","toLowerCase","valueAs","sandbox","applicationId","locationId","createVerificationDetails","String","currencyCode","intent","billingContact","familyName","givenName","toUpperCase","addressLines","errorMessage","OrderScreen","billingAddress","billingCity","billingState","billingZip","billingCountry","overflowWrap","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","color","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","errorDelete","successCreate","errorCreate","createdProduct","successIsActive","errorIsActive","deleteProduct","isActiveHandler","console","log","updateProductIsActive","category","isActive","ProductEditScreen","setPrice","setImage","setCategory","setDescription","setIsCash","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","ShippingScrreen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68cb0f91.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAILURE = 'PRODUCT_LIST_FAILURE';\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAILURE = 'PRODUCT_DETAILS_FAILURE';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAILURE = 'PRODUCT_DELETE_FAILURE';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAILURE = 'PRODUCT_CREATE_FAILURE';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAILURE = 'PRODUCT_UPDATE_FAILURE';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAILURE = 'PRODUCT_CREATE_REVIEW_FAILURE';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAILURE = 'PRODUCT_TOP_FAILURE';\n\nexport const PRODUCT_UPDATE_IS_ACTIVE_REQUEST = 'PRODUCT_UPDATE_IS_ACTIVE_REQUEST';\nexport const PRODUCT_UPDATE_IS_ACTIVE_SUCCESS = 'PRODUCT_UPDATE_IS_ACTIVE_SUCCESS';\nexport const PRODUCT_UPDATE_IS_ACTIVE_FAILURE = 'PRODUCT_UPDATE_IS_ACTIVE_FAILURE';\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n\nexport const CART_RESET = 'CART_RESET';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\n\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAILURE = 'USER_REGISTER_FAILURE';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAILURE';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAILURE = 'USER_UPDATE_PROFILE_FAILURE';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAILURE = 'USER_DELETE_FAILURE';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAILURE = 'USER_UPDATE_FAILURE';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAILURE = 'ORDER_CREATE_FAILURE';\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAILURE = 'ORDER_DETAILS_FAILURE';\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAILURE = 'ORDER_PAY_FAILURE';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\nexport const ORDER_LIST_MY_FAILURE = 'ORDER_LIST_MY_FAILURE';\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAILURE = 'ORDER_LIST_FAILURE';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAILURE = 'ORDER_DELIVER_FAILURE';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer, productUpdateIsActiveReducer} from './reducers/productReducers';\nimport {cartReducer} from './reducers/cartReducers';\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers';\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers';\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    productUpdateIsActive: productUpdateIsActiveReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : 'PayPal';\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: paymentMethodFromStorage\n    },\n    userLogin: {\n        userInfo: userInfoFromStorage\n    }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILURE, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILURE, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAILURE, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAILURE, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAILURE, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAILURE, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAILURE, PRODUCT_UPDATE_IS_ACTIVE_REQUEST, PRODUCT_UPDATE_IS_ACTIVE_SUCCESS, PRODUCT_UPDATE_IS_ACTIVE_FAILURE} from '../constants/productConstants';\n\nexport const productListReducer = (state = {products: []}, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true, products: []};\n        case PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page};\n        case PRODUCT_LIST_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const productDetailsReducer = (state = {product: {reviews: []}}, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading: true, ...state};\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading: false, product: action.payload};\n        case PRODUCT_DETAILS_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return {loading: true};\n        case PRODUCT_DELETE_SUCCESS:\n            return {loading: false, success: true};\n        case PRODUCT_DELETE_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return {loading: true};\n        case PRODUCT_CREATE_SUCCESS:\n            return {loading: false, success:true, product: action.payload};\n        case PRODUCT_CREATE_FAILURE:\n            return {loading: false, error: action.payload};\n        case PRODUCT_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const productUpdateReducer = (state = {product: {}}, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return {loading: true};\n        case PRODUCT_UPDATE_SUCCESS:\n            return {loading: false, success:true, product: action.payload};\n        case PRODUCT_UPDATE_FAILURE:\n            return {loading: false, error: action.payload};\n        case PRODUCT_UPDATE_RESET:\n            return {product: {}};\n        default:\n            return state;\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return {loading: true};\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return {loading: false, success:true};\n        case PRODUCT_CREATE_REVIEW_FAILURE:\n            return {loading: false, error: action.payload};\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const productTopRatedReducer = (state = {products: []}, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return {loading: true, products: []};\n        case PRODUCT_TOP_SUCCESS:\n            return {loading: false, products: action.payload};\n        case PRODUCT_TOP_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const productUpdateIsActiveReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_IS_ACTIVE_REQUEST:\n            return {loading: true, products: []};\n        case PRODUCT_UPDATE_IS_ACTIVE_SUCCESS:\n            return {loading: false, success: true};\n        case PRODUCT_UPDATE_IS_ACTIVE_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_RESET} from '../constants/cartConstants';\n\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem = state.cartItems.find(x => x.product === item.product);\n            if (existItem) {\n                return {\n                  ...state,\n                  cartItems: state.cartItems.map((x) =>\n                    x.product === existItem.product ? item : x\n                  ),\n                }\n              } else {\n                return {\n                  ...state,\n                  cartItems: [...state.cartItems, item],\n                }\n              }\n\n          case CART_REMOVE_ITEM:\n            return {\n              ...state,\n              cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n          case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n              ...state,\n              shippingAddress: action.payload\n            }\n\n          case CART_SAVE_PAYMENT_METHOD:\n            return {\n              ...state,\n              paymentMethod: action.payload\n            }\n\n          case CART_RESET:\n            return {...state, cartItems: []}\n\n            default:\n                return state;\n    }\n}","import {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAILURE, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAILURE, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAILURE, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAILURE, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAILURE, USER_UPDATE_RESET, USER_UPDATE_PROFILE_RESET} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {loading: true};\n        case USER_LOGIN_SUCCESS:\n            return {loading: false, userInfo: action.payload};\n        case USER_LOGIN_FAILURE:\n            return {loading: false, error: action.payload};\n        case USER_LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {loading: true};\n        case USER_REGISTER_SUCCESS:\n            return {loading: false, userInfo: action.payload};\n        case USER_REGISTER_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = {user: {}}, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return {...state, loading: true};\n        case USER_DETAILS_SUCCESS:\n            return {loading: false, user: action.payload};\n        case USER_DETAILS_FAILURE:\n            return {loading: false, error: action.payload};\n        case USER_DETAILS_RESET:\n            return {user: []};\n        default:\n            return state;\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {...state, loading: true};\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading: false, success: true, userInfo: action.payload};\n        case USER_UPDATE_PROFILE_FAILURE:\n            return {loading: false, error: action.payload};\n        case USER_UPDATE_PROFILE_RESET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const userListReducer = (state = {users: []}, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return {loading: true};\n        case USER_LIST_SUCCESS:\n            return {loading: false, users: action.payload};\n        case USER_LIST_FAILURE:\n            return {loading: false, error: action.payload};\n        case USER_LIST_RESET:\n            return {users: []};\n        default:\n            return state;\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return {loading: true};\n        case USER_DELETE_SUCCESS:\n            return {loading: false, success: true};\n        case USER_DELETE_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport const userUpdateReducer = (state = {user: {}}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return {loading: true};\n        case USER_UPDATE_SUCCESS:\n            return {loading: false, success: true};\n        case USER_UPDATE_FAILURE:\n            return {loading: false, error: action.payload};\n        case USER_UPDATE_RESET:\n            return {user: {}}\n        default:\n            return state;\n    }\n}","import {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILURE, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILURE, ORDER_PAY_RESET, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILURE, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAILURE, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAILURE, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAILURE, ORDER_DELIVER_RESET, ORDER_CREATE_RESET, ORDER_DETAILS_RESET} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {loading: true};\n        case ORDER_CREATE_SUCCESS:\n            return {loading: false, success: true, order: action.payload};\n        case ORDER_CREATE_FAILURE:\n            return {loading: false, error: action.payload};\n        case ORDER_CREATE_RESET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = {loading: true, orderItems: []}, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {...state, loading: true};\n        case ORDER_DETAILS_SUCCESS:\n            return {loading: false, order: action.payload};\n        case ORDER_DETAILS_FAILURE:\n            return {loading: false, error: action.payload};\n        case ORDER_DETAILS_RESET:\n            return {};    \n        default:\n            return state;\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {loading: true};\n        case ORDER_PAY_SUCCESS:\n            return {loading: false, success: true};\n        case ORDER_PAY_FAILURE:\n            return {loading: false, error: action.payload};\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {loading: true};\n        case ORDER_DELIVER_SUCCESS:\n            return {loading: false, success: true};\n        case ORDER_DELIVER_FAILURE:\n            return {loading: false, error: action.payload};\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const orderListMyReducer = (state = {orders: []}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {loading: true};\n        case ORDER_LIST_MY_SUCCESS:\n            return {loading: false, orders: action.payload};\n        case ORDER_LIST_MY_FAILURE:\n            return {loading: false, error: action.payload};\n        case ORDER_LIST_MY_RESET:\n            return {orders: []}\n        default:\n            return state;\n    }\n}\n\n\nexport const orderListReducer = (state = {orders: []}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {loading: true};\n        case ORDER_LIST_SUCCESS:\n            return {loading: false, orders: action.payload};\n        case ORDER_LIST_FAILURE:\n            return {loading: false, error: action.payload};\n        default:\n            return state;\n    }\n}","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAILURE, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAILURE, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAILURE, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAILURE, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAILURE } from \"../constants/userConstants\"\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const {data} = await axios.post('/api/users/login', {email, password}, config);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({type: USER_LOGIN_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        const {data} = await axios.post('/api/users', {name, email, password}, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        });\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({type: USER_REGISTER_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({\n        type: USER_LOGOUT\n    });\n    dispatch({\n        type: USER_DETAILS_RESET\n    });\n    dispatch({\n        type: ORDER_LIST_MY_RESET\n    });\n    dispatch({\n        type: USER_LIST_RESET\n    });\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: USER_DETAILS_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        });\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({type: USER_UPDATE_PROFILE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.get(`/api/users`, config);\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: USER_LIST_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        await axios.delete(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DELETE_SUCCESS\n        });\n    } catch (error) {\n        dispatch({type: USER_DELETE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.put(`/api/users/${user._id}`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS\n        });\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({type: USER_UPDATE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap';\nimport {logout} from '../actions/userActions';\n\nconst Header = ({history}) => {\n    const dispatch = useDispatch();\n    \n    const userLogin = useSelector(state => state.userLogin);\n    const {userInfo} = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n\n    return (\n        <header>\n           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container>\n                <LinkContainer to='/'>\n                    <Navbar.Brand>Trail Magic From Your Desk</Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <LinkContainer to ='/cart'>\n                            <Nav.Link><i className=\"fas fa-shopping-cart\">Cart</i></Nav.Link>\n                        </LinkContainer>\n                        {userInfo && userInfo.isAdmin && (\n                            <NavDropdown title='Admin' id='adminMenu'>\n                            <LinkContainer to='/admin/userList'>\n                                <NavDropdown.Item>Users</NavDropdown.Item>\n                            </LinkContainer>\n                            <LinkContainer to='/admin/productList'>\n                                <NavDropdown.Item>Products</NavDropdown.Item>\n                            </LinkContainer>\n                            <LinkContainer to='/admin/orderList'>\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\n                            </LinkContainer>\n                            <NavDropdown.Item onClick={logoutHandler}>\n                                    Logout\n                                </NavDropdown.Item>\n                        </NavDropdown>\n                        )}\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <footer>\n           <Container>\n               <Row>\n                   <Col className='text-center py-3'>\n                     Copyright &copy; Trail Magic Desk | Website by <a href='http://www.bytarmacortrail.com'>Zach \"Free Fall\" Tucker</a>\n                   </Col>\n               </Row>\n           </Container>\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Meta = ({title, description, keywords}) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keywords' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Trail Magic From Your Desk',\n    keywords: 'thru-hike, thru hikers, applachian trail, hostel, trail magic, trail magic desk, bunk, trail magic beer',\n    description: 'Friends and family of hikers can purchase bunks, beers/food, and shuttles for those on trail.'\n};\n\nexport default Meta\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Card} from 'react-bootstrap';\n\nconst Product = ({product}) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n                <Card.Title className='h3' as='div'>\n                    <strong>{product.name}</strong>\n                </Card.Title>\n            </Link>\n\n                <Card.Text as='h3'>\n                        ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react';\nimport {Spinner} from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <div>\n            <Spinner animation='border' role='status' style={{width: '100px', height: '100px', margin: 'auto', display: 'block'}}>\n                <span className=\"sr-only\">Loading</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Loader\n","import React from 'react';\nimport {Alert} from 'react-bootstrap';\n\nconst Message = ({variant, children}) => {\n    return (\n        <div>\n            <Alert variant={variant}>\n                {children}\n            </Alert>\n        </div>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport {Pagination} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nconst Paginate = ({pages, page, isAdmin=false, keyword=''}) => {\n    return pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map(x => (\n                <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x+1}` : `/admin/productList/${x+1}`}>\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n}\n\nexport default Paginate\n","import {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILURE, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILURE, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAILURE, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAILURE, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAILURE, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAILURE, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAILURE, PRODUCT_UPDATE_IS_ACTIVE_REQUEST, PRODUCT_UPDATE_IS_ACTIVE_SUCCESS, PRODUCT_UPDATE_IS_ACTIVE_FAILURE} from '../constants/productConstants';\nimport axios from 'axios';\n\nexport const listProducts = (keyword = '', pageNumber = '', isAdmin = false) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_LIST_REQUEST});\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}&isAdmin=${isAdmin}`);\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_LIST_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_DETAILS_REQUEST});\n        const {data} = await axios.get(`/api/products/${id}`);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        await axios.delete(`/api/products/${id}`, config);\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n        });\n    } catch (error) {\n        dispatch({type: PRODUCT_DELETE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.post(`/api/products/`, {}, config);\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: PRODUCT_CREATE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.put(`/api/products/${product._id}`, product, config);\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: PRODUCT_UPDATE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n\n        });\n    } catch (error) {\n        dispatch({type: PRODUCT_CREATE_REVIEW_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({type: PRODUCT_TOP_REQUEST});\n        const {data} = await axios.get(`/api/products/top`);\n        dispatch({type: PRODUCT_TOP_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_TOP_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n    }\n}\n\nexport const updateProductIsActive = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_IS_ACTIVE_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        console.log(userInfo);\n        console.log(config);\n        await axios.put(`/api/products/isActive/${id}`, {}, config);\n\n        dispatch({\n            type: PRODUCT_UPDATE_IS_ACTIVE_SUCCESS,\n            success: true\n        });\n    } catch (error) {\n        dispatch({type: PRODUCT_UPDATE_IS_ACTIVE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}","import React, {useEffect} from 'react';\nimport Meta from '../components/Meta';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Row, Col, Jumbotron, Image} from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport {listProducts} from '../actions/productActions';\n\n\nconst HomeScreen = ({match}) => {\n\n    const keyword = match.params.keyword;\n    const pageNumber = match.params.pageNumber || 1;\n\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.productList);\n    const {loading, error, products, page, pages} = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber));\n    }, [dispatch, keyword, pageNumber]);\n    \n    return (\n        <>\n            <div className='text-center my-2'>\n                <Image src='station-cheer.jpg' className='mx-auto w-50' fluid />\n            </div>\n            <Jumbotron className='my-1 py-3'>\n                <h2>What is trail magic?</h2>\n                <p>Trail magic means something unique to every hiker, but to most, it is: finding what you need most when you least expect it, experiencing something rare, extraordinary, or inspiring in nature, or encountering unexpected acts of generosity, that restore one’s faith in humanity.<br />\n                <em>- Appalachian Trail Conservancy</em></p>\n\n                <h2>How can I help?</h2>\n                <p>The Station at 19E is a hostel located at Northbound mile 395 on the Appalachian Trail's US-19E road crossing. We are unique in that we offer\n                    a 20+ bed bunkhouse (with laundry + kitchen) AND a full pub with 200+ unique beers and food on site. If you'd like to make a hiker's day, \n                    you can use the links below to buy a beer or bunk for them. During checkout, you can specify a Trail Name and Message for your intended recipient, but this is totally optional.\n                </p>\n                {/* <Row>\n                    <Col className='d-xs-none d-md-block' md={2}>\n                        <Image src='/hikerPics/001.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n                    <Col  md={2}>\n                        <Image src='/hikerPics/002.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n                    <Col  md={2}>\n                        <Image src='/hikerPics/003.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n\n                    <Col  md={2}>\n                        <Image src='/hikerPics/004.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n\n                    <Col md={2}>\n                        <Image src='/hikerPics/005.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n\n                    <Col md={2}>\n                        <Image src='/hikerPics/006.jpg' className='border border-dark p-0' thumbnail fluid />\n                    </Col>\n\n                </Row> */}\n            </Jumbotron>\n\n           <Meta />\n           {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : \n            (<>\n            <Row>\n                {products.map(product => {\n                    if (!product.isCash) {\n                    return (<Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                        <Product product={product} />\n                    </Col>);\n                    } else {\n                        return null;\n                    }\n                })}\n            </Row>\n            <h2 className='text-center'>Cash Trail Magic</h2>\n            <p className='text-center font-italic'>Your cash trail magic can be used for any product or service at The Station at 19E.</p>\n            <Row>\n                {products.map(product => {\n                    if (product.isCash) {\n                    return (<Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                        <Product product={product} />\n                    </Col>);\n                    } else {\n                        return null;\n                    }\n                })}\n            </Row>\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} /> </>)\n            }\n            <Jumbotron className='my-1 py-3'>\n                <Row className='align-items-center'>\n                    <Col md={6}>\n                        <Image src='station-sign.jpg' className='border border-dark p-0' fluid thumbnail />\n                    </Col>\n                    <Col md={6} className='text-center'>\n                        <span className='h2 font-weight-bold'>Our goal is to provide trail magic to every thru-hiker visiting <a href={'https://www.thestationat19e.com'}>The Station at 19E</a>.<br /><br /></span><p className='h2 font-italic'>You too can be a virtual trail angel - right from your desk!</p>\n                    </Col>\n                </Row>\n            </Jumbotron>\n        </>\n    )\n}\n\nexport default HomeScreen;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap';\nimport Meta from '../components/Meta';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport {listProductDetails} from '../actions/productActions';\n\n\nconst ProductScreen = ({history, match}) => {\n    const [qty, setQty] = useState(1);\n\n    const dispatch = useDispatch();\n    const productDetails = useSelector(state => state.productDetails);\n    const {loading, error, product} = productDetails;\n    \n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id));\n    }, [dispatch, match]);\n\n    const addtoCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    }\n\n    return (\n        <>\n        <Link className='btn btn-light my-3' to='/'>\n            Go Back\n        </Link>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n           <>\n           <Meta title={product.name} />\n           <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid />\n                </Col>\n                <Col md={3}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: {product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Price:\n                                    </Col>\n                                    <Col>\n                                    <strong>${product.price}</strong></Col>\n                                </Row>\n                            </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                        Quantity:\n                                        </Col>\n                                        <Col>\n                                        <Form.Control type='number' min='1' placeholder='1' value={qty} onChange={(e) => setQty(e.target.value)}></Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            \n\n                            <ListGroup.Item>\n                                <Button onClick={addtoCartHandler} className='btn-block' type='button'>\n                                    Add to Cart\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            </>\n            )}\n        </>\n    );\n}\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const {data} = await axios.get(`/api/products/${id}`);\n    dispatch({type: CART_ADD_ITEM, payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n        squareCatalogId: data.squareCatalogId,\n        squareTaxId: data.squareTaxId,\n        isCash: data.isCash\n    }});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: id});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const saveShippingAddress = (data) => async (dispatch) => {\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data});\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\n}\n\n","import React, {useEffect} from 'react';\nimport axios from 'axios';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport {Link} from 'react-router-dom';\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap';\nimport {addToCart, removeFromCart} from '../actions/cartActions';\nimport Meta from '../components/Meta';\n\n\nconst CartScreen = ({match, location, history}) => {\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n    const dispatch = useDispatch();\n    const cart = useSelector(state => (state.cart));\n    const {cartItems} = cart;\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    }\n\n    const checkoutHandler = async () => {\n        const result = await axios.post('/api/payment/calculate', cart)\n        localStorage.setItem('calculatedOrder', JSON.stringify(result.data.order.net_amounts));\n        history.push('/placeorder');\n    }\n\n    return (\n        <Row>\n            <Meta title='Your Cart' />\n            <Col md={8}>\n            <h1>Your Cart</h1>\n            {cartItems.length === 0 ? (<Message>Your cart is empty. <Link to='/'>Click here to go back</Link></Message>) : (\n                <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                        <ListGroup.Item key={item.product}>\n                            <Row>\n                                <Col md={2}>\n                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                </Col>\n                                <Col md={3}>\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                </Col>\n                                <Col md={2}>\n                                    ${item.price}\n                                </Col>\n                                <Col md={2}>\n                                <Form.Control type='number' min='1' value={item.qty} onChange={e => dispatch(addToCart(item.product, Number(e.target.value)))} />        \n                                </Col>\n                                <Col md={2}>\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, cur) => (acc + cur.qty), 0)} items)</h2>\n                        ${cartItems.reduce(((acc,cur) => (acc + cur.qty * cur.price)), 0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                                Checkout\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport {Container, Row, Col} from 'react-bootstrap';\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom';\nimport {Form, Button, Row, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {login} from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport Meta from '../components/Meta';\n\nconst LoginScreen = ({location, history}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const {loading, error, userInfo} = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <FormContainer>\n            <Meta title='Login' />\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom';\nimport {Form, Button, Row, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {register} from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport Meta from '../components/Meta';\n\nconst RegisterScreen = ({location, history}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [name, setName] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const {loading, error, userInfo} = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo && !error) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    }\n\n    return (\n        <FormContainer>\n            <Meta title='Register' />\n            <h1>Sign Up</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {message && <Message>{message}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlID='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link></Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILURE, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILURE, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILURE, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAILURE, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAILURE, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAILURE, ORDER_DETAILS_RESET} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        });\n        const {data} = await axios.post(`/api/orders`, order);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_CREATE_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        });\n\n        const {data} = await axios.get(`/api/orders/${id}`);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_DETAILS_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_PAY_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_DELIVER_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.get(`/api/orders/myorders`, config);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_LIST_MY_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n} \n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        });\n        const {userLogin: {userInfo}} = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}` \n            }\n        };\n        const {data} = await axios.get(`/api/orders/`, config);\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({type: ORDER_LIST_FAILURE, payload: error.response && error.response.data.message ? error.response.data.message : error.message});\n\n    }\n} ","import React, {useState, useEffect} from 'react'\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {getUserDetails, updateUserProfile} from '../actions/userActions';\nimport {listMyOrders} from '../actions/orderActions';\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants';\nimport Meta from '../components/Meta';\n\nconst ProfileScreen = ({location, history}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [name, setName] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector(state => state.userDetails);\n    const {loading, error, user} = userDetails;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const {userInfo} = userLogin;\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const {success} = userUpdateProfile;\n\n    const orderListMy = useSelector(state => state.orderListMy);\n    const {loading:loadingOrders, error:errorOrders, orders} = orderListMy;\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        } else {\n            if (!user || !user.name || success) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET});\n                dispatch(getUserDetails('profile'));\n                dispatch(listMyOrders());\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!');\n        } else {\n            dispatch(updateUserProfile({id: user._id, name, email, password}));\n            \n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <Meta title='User Profile' />\n            <h2>User Profile</h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {message && <Message>{message}</Message>}\n            {success && <Message variant='success'>Profile Updated!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlID='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Update\n                </Button>\n            </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='dange'>{errorOrders}</Message> : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>HIKER</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>DETAILS</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order.recipient}</td>\n                                    <td>{order.createdAt.substring(0,10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm' variant='light'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React from 'react';\nimport {Nav} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>\n                            Sign In\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>\n                        Sign In\n                    </Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>\n                            Shipping\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>\n                        Shipping\n                    </Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>\n                            Payment\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>\n                        Payment\n                    </Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>\n                            Place Order\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>\n                        Place Order\n                    </Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState} from 'react'\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport {saveShippingAddress} from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst ShippingScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart);\n    const {shippingAddress} = cart;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        \n        dispatch(saveShippingAddress({address,city, postalCode, country}));\n        history.push('/payment');\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n             <Form.Group controlID='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='Address' value={address} onChange={(e) => setAddress(e.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='City' value={city} onChange={(e) => setCity(e.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' placeholder='Postal Code' value={postalCode} onChange={(e) => setPostalCode(e.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlID='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='Country' value={country} onChange={(e) => setCountry(e.target.value)} required></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, {useState} from 'react'\nimport {Form, Button, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport {savePaymentMethod} from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst PaymentScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart);\n    const {shippingAddress} = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping');\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        \n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>\n                        Select Method\n                    </Form.Label>\n                    <Col>\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { Row, Col, ListGroup, Image, Card, Form} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport {Link} from 'react-router-dom';\nimport {createOrder} from '../actions/orderActions';\nimport { SquarePaymentForm } from 'react-square-payment-form';\nimport 'react-square-payment-form/lib/default.css';\nimport {\n    CreditCardNumberInput,\n    CreditCardExpirationDateInput,\n    CreditCardPostalCodeInput,\n    CreditCardCVVInput,\n    CreditCardSubmitButton\n  } from 'react-square-payment-form'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport Meta from '../components/Meta';\nimport CountrySelect from 'react-bootstrap-country-select';\n\nconst PlaceOrderScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart);\n\n    const dispatch = useDispatch();\n\n    const orderState = useSelector(state => state.orderCreate);\n    const {order, success, error} = orderState;\n\n    const calculatedOrder = localStorage.getItem('calculatedOrder') ? JSON.parse(localStorage.getItem('calculatedOrder')) : null;\n    if (!calculatedOrder) {\n        throw new Error('Could not calculate order totals');\n    }\n\n\n    useEffect(() => {    \n        if (success) {\n            dispatch({type: ORDER_CREATE_RESET});\n            localStorage.removeItem('cartItems');\n            history.push(`/order/${order._id}`)\n        }\n\n    }, [history, dispatch, success, order, cart]);\n\n    const [nonceErrors, setNonceErrors] = useState([]);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [zipCode, setZipCode] = useState( '');\n    const [state, setState] = useState('');\n    const [country, setCountry] = useState('us');\n    const [recipient, setRecipient] = useState('');\n    const [message, setMessage] = useState('');\n\n    const addDecimals = (num) => (\n        (Math.round(num * 100) / 100).toFixed(2)\n    )\n\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((accum, item) => (\n        accum + (item.price * item.qty)\n    ), 0));\n\n    cart.taxPrice = addDecimals(Number(calculatedOrder.tax_money.amount / 100));\n    cart.totalPrice = addDecimals(Number(Number(calculatedOrder.total_money.amount / 100)));\n\n    if ((calculatedOrder.total_money.amount / 100) < cart.itemsPrice) {\n        throw new Error('Invalid order calculations');\n    }\n\n    const cardNonceResponseReceived = async (errors, nonce, cardData, buyerVerificationToken) => {\n        if (errors) {\n          setNonceErrors([errors.map(error => error.message)])\n          return\n        }\n        setNonceErrors([]);\n        const {data} = await axios.post('/api/payment/authorize', { \n            nonce,\n            token: buyerVerificationToken, \n            amount: (Number((cart.totalPrice * 100))),\n            billingInfo: {\n                name,\n                email,\n                address,\n                city,\n                state,\n                zip: zipCode,\n                country\n            },\n            cartItems: cart.cartItems,\n            recipient,\n            message\n         });\n\n         if(data.payment.status === \"COMPLETED\") {\n             dispatch(createOrder({\n                orderItems: cart.cartItems,\n                itemsPrice: cart.itemsPrice,\n                taxPrice: cart.taxPrice,\n                totalPrice: cart.totalPrice,\n                recipient,\n                message,\n                user: data.user._id,\n                paymentResult: {\n                    id: data.payment.id,\n                    status: data.payment.status,\n                    updated_at: data.payment.updated_at,\n                    order_id: data.payment.order_id,\n                    receipt_url: data.payment.receipt_url\n                }\n            }));\n         }\n      }\n\n      const createVerificationDetails = () => {\n        return {\n          amount: (String((cart.totalPrice * 100))),\n          currencyCode: \"USD\",\n          intent: \"CHARGE\",\n          billingContact: {\n            familyName: name.split(' ')[1],\n            givenName: name.split(' ')[0],\n            email,\n            country: country.toUpperCase(),\n            city: city,\n            addressLines: [address],\n            postalCode: zipCode\n          }\n        }\n      }\n\n    return (\n        <>\n        {error ? <Message variant='dange'>{error}</Message> : (\n            <Row>\n                <Meta title='Checkout' />\n                <Col md={7}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is Empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                     {item.qty} * ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Recipient</h2>\n                            <p>Are you buying this trail magic for a specific hiker or hikers? Enter their trail name below!\n                                (Note - some trail names are popular and could be repeated within a group. It is helpful to include your hiker's real first name in addition to their trail name.)\n                            </p>\n                            <Form.Group controlId='recipient'>\n                                <Form.Label>Trail Name (Optional)</Form.Label>\n                                <Form.Control type='text' placeholder='' value={recipient} onChange={(e) => setRecipient(e.target.value)}></Form.Control>\n                            </Form.Group>\n                            <h2>Message</h2>\n                            <p>We'll pass your message along to the lucky hiker!\n                            </p>\n                            <Form.Group controlId='message'>\n                                <Form.Label>Message (Optional)</Form.Label>\n                                <Form.Control type='text' placeholder='' value={message} onChange={(e) => setMessage(e.target.value)}></Form.Control>\n                            </Form.Group>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Billing Information</h2>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name on Card</Form.Label>\n                                <Form.Control type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type='text' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='address'>\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type='text' placeholder='Address' value={address} onChange={(e) => setAddress(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='city'>\n                                <Form.Label>City</Form.Label>\n                                <Form.Control type='text' placeholder='City' value={city} onChange={(e) => setCity(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='state'>\n                                <Form.Label>State</Form.Label>\n                                <Form.Control type='text' placeholder='State' value={state} onChange={(e) => setState(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='postalCode'>\n                                <Form.Label>ZIP Code</Form.Label>\n                                <Form.Control type='text' placeholder='Postal Code' value={zipCode} onChange={(e) => setZipCode(e.target.value)} required></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='country'>\n                                <Form.Label>Country</Form.Label>\n                                <CountrySelect value={country && country.toLowerCase()} onChange={setCountry} valueAs='id' />\n                                </Form.Group>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={5}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Items\n                                    </Col>\n                                    <Col>\n                                    ${cart.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Tax\n                                    </Col>\n                                    <Col>\n                                    ${cart.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Total\n                                    </Col>\n                                    <Col>\n                                    ${cart.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                                {error && (\n                                <ListGroup.Item>\n                                    <Message variant='danger'>{error}</Message>\n                                </ListGroup.Item>\n                                )\n                                }\n                            <ListGroup.Item>\n                                <SquarePaymentForm\n                                    sandbox={true}\n                                    applicationId='sandbox-sq0idb-I8r3GOt-88td3-IuBVsqgw'\n                                    locationId='L3R9ASHJPPHJF'\n                                    cardNonceResponseReceived={cardNonceResponseReceived}\n                                    createVerificationDetails={createVerificationDetails}\n                                    >\n                                        <fieldset className=\"sq-fieldset\">\n                                            <CreditCardNumberInput />\n                                            <div className=\"sq-form-third\">\n                                            <CreditCardExpirationDateInput />\n                                            </div>\n\n                                            <div className=\"sq-form-third\">\n                                            <CreditCardPostalCodeInput />\n                                            </div>\n\n                                            <div className=\"sq-form-third\">\n                                            <CreditCardCVVInput />\n                                            </div>\n                                        </fieldset>\n\n                                        <CreditCardSubmitButton>\n                                            Pay ${cart.totalPrice}\n                                        </CreditCardSubmitButton>\n                                    </SquarePaymentForm>\n\n                                    <div className=\"sq-error-message\">\n                                    {nonceErrors.map(errorMessage =>\n                                        <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\n                                    )}\n                                    </div>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        )}\n        </>\n    )\n\n}\n\nexport default PlaceOrderScreen;","import React, {useEffect} from 'react';\nimport {Row, Col, ListGroup, Image, Card} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport {Link} from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport {getOrderDetails} from '../actions/orderActions';\nimport {CART_RESET} from '../constants/cartConstants';\nimport Meta from '../components/Meta';\n\nconst OrderScreen = ({match, history}) => {\n    const dispatch = useDispatch();\n\n    const id = match.params.id;\n\n    const orderDetails = useSelector(state => state.orderDetails);\n    const {order, loading, error} = orderDetails;\n    useEffect(() => {\n\n        dispatch({type: CART_RESET});\n\n        if (!order) {\n          dispatch(getOrderDetails(id));\n        } else if (order._id !== id) {\n          dispatch(getOrderDetails(id));\n        }\n        \n    }, [dispatch, history, id, order]);\n\n    if (!loading) {\n        //   Calculate prices\n        const addDecimals = (num) => {\n          return (Math.round(num * 100) / 100).toFixed(2)\n        }\n    \n        order.itemsPrice = addDecimals(\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n        order.taxPrice = addDecimals(order.taxPrice);\n        order.totalPrice = addDecimals(order.totalPrice);\n      }\n\n      return loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <h1>Thank you for your order!</h1>\n          <Row>\n            <Meta title='Order Details' />\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>Details</h2>\n                  <p>\n                    <strong>Order ID:</strong> {order._id}<br />\n                    <strong>Name: </strong> {order.user.name}<br />\n                    <strong>Email: </strong> \n                    <a href={`mailto:${order.user.email}`}>{order.user.email}</a><br />\n                    <strong>Address: </strong> {order.user.billingAddress}<br />\n                    <strong>City: </strong> {order.user.billingCity}<br />\n                    <strong>State: </strong> {order.user.billingState}<br />\n                    <strong>ZIP: </strong> {order.user.billingZip}<br />\n                    <strong>Country: </strong> {order.user.billingCountry.toUpperCase()}<br /><br />\n                    <strong>Hiker Recipient: </strong><span style={{overflowWrap: 'break-word'}}>{order.recipient}</span><br />\n                    <strong>Message: </strong><span style={{overflowWrap: 'break-word'}}>{order.message}</span>\n                  </p>\n\n                </ListGroup.Item>\n    \n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method: </strong>{order.paymentMethod}<br />\n                    <strong>Payment Date: </strong>{order.paymentResult.updated_at.substring(0,10)}<br />\n                    <strong>Link to Receipt: </strong><a href={order.paymentResult.receipt_url}>{order.paymentResult.receipt_url}</a>\n                  </p>\n                </ListGroup.Item>\n    \n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message>Order is empty</Message>\n                  ) : (\n                    <ListGroup variant='flush'>\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.qty} x ${item.price} = ${item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>${order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>${order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )\n    }\n\nexport default OrderScreen;","import React, {useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {Table, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {listUsers, deleteUser} from '../actions/userActions';\n\nconst UserListScreen = ({history}) => {\n   const dispatch = useDispatch();\n   \n   const userList = useSelector(state => state.userList);\n   const {loading, error, users} = userList;\n\n   const userLogin = useSelector(state => state.userLogin);\n   const {userInfo} = userLogin;\n\n   const userDelete = useSelector(state => state.userDelete);\n   const {success:successDelete} = userDelete;\n\n   useEffect(() => {\n       if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers());\n       } else {\n           history.push('/login');\n       }\n   }, [dispatch, history, userInfo, userDelete])\n\n   const deleteHandler = (id) => {\n       if (window.confirm('Are you sure?')) {\n        dispatch(deleteUser(id));\n       }\n   }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {successDelete && <Message>User Deleted</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Admin?</th>\n                            <th>Edit</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>\n                                    {user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}></i>) : <i className='fas fa-times' style={{color: 'red'}}></i>}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/users/${user._id}/edit`}>\n                                        <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}><i className='fas fa-trash'></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom';\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {getUserDetails, updateUser} from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport {USER_UPDATE_RESET} from '../constants/userConstants';\n\nconst UserEditScreen = ({match, history}) => {\n    const userId = match.params.id;\n\n    const [email, setEmail] = useState('');\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [name, setName] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const {loading, error, user} = userDetails;\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = userUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({type: USER_UPDATE_RESET});\n            history.push('/admin/userList');\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n       dispatch(updateUser({_id: userId, name, email, isAdmin}));\n    }\n\n    return (\n        <>\n        <Link to='/admin/userList' className='btn btn-light my-3'>Go Back</Link>\n        <FormContainer>\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                 <Form onSubmit={submitHandler}>\n                 <Form.Group controlID='name'>\n                         <Form.Label>Name</Form.Label>\n                         <Form.Control type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='email'>\n                         <Form.Label>Email Address</Form.Label>\n                         <Form.Control type='email' placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='isAdmin'>\n                         <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)} />\n                     </Form.Group>\n                     <Button type='submit' variant='primary'>\n                         Update\n                     </Button>\n                 </Form>\n            )}\n        </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditScreen;\n","import React, {useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {Table, Button, Row, Col, Form} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport {listProducts, deleteProduct, createProduct, updateProductIsActive} from '../actions/productActions';\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\n\nconst ProductListScreen = ({history, match}) => {\n    const pageNumber = match.params.pageNumber || 1;\n   const dispatch = useDispatch();\n   \n   const productList = useSelector((state) => state.productList)\n   const { loading, error, products, page, pages } = productList\n\n   const userLogin = useSelector(state => state.userLogin);\n   const {userInfo} = userLogin;\n\n   const productDelete = useSelector(state => state.productDelete);\n   const {success:successDelete, error:errorDelete} = productDelete;\n\n   const productCreate = useSelector(state => state.productCreate);\n   const {success:successCreate, error:errorCreate, product:createdProduct} = productCreate;\n\n   const productUpdateIsActive = useSelector(state => state.productUpdateIsActive);\n   const {success:successIsActive, error:errorIsActive} = productUpdateIsActive;\n\n\n   useEffect(() => {\n       dispatch({type: PRODUCT_CREATE_RESET})\n       if (!userInfo.isAdmin) {\n            history.push('/login');\n       }\n       \n       if (successCreate) {\n           history.push(`/admin/products/${createdProduct._id}/edit`);\n       } else {\n            dispatch(listProducts('', pageNumber, true));\n       }\n       \n   }, [dispatch, history, userInfo, successCreate, createdProduct, successDelete, pageNumber, successIsActive])\n\n   const deleteHandler = (id) => {\n       if (window.confirm('Are you sure?')) {\n           dispatch(deleteProduct(id));\n       }\n   }\n\n   const createProductHandler = () => {\n       dispatch(createProduct());\n   }\n\n   const isActiveHandler = (id) => {\n       dispatch(updateProductIsActive(id));\n   }\n\n    return (\n        <>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}><i className='fas fa-plus'>Create Product</i></Button>\n                </Col>\n            </Row>\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n            {errorIsActive && <Message variant='danger'>{errorIsActive}</Message>}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Category</th>\n                            <th>Active</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map(product => (\n                            <tr key={product._id}>\n                                <td>{product._id}</td>\n                                <td>{product.name}</td>\n                                <td>${product.price}</td>\n                                <td>{product.category}</td>\n                                <td>\n                                    <Form.Check type='switch' id={`isActive-${product._id}`} onChange={() => isActiveHandler(product._id)} checked={product.isActive} />\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/products/${product._id}/edit`}>\n                                        <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}><i className='fas fa-trash'></i></Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Paginate pages={pages} page={page} isAdmin={true} />\n                </>\n            )}\n        </>\n    )\n}\n\nexport default ProductListScreen\n","import axios from 'axios';\nimport React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom';\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {listProductDetails, updateProduct} from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = ({match, history}) => {\n    const productId = match.params.id;\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [isCash, setIsCash] = useState(false);\n    const [uploading, setUploading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const productDetails = useSelector((state) => state.productDetails);\n    const {loading, error, product} = productDetails;\n\n    const productUpdate = useSelector((state) => state.productUpdate);\n    const {loading: loadingUpdate, error:errorUpdate, success:successUpdate} = productUpdate;\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({type: PRODUCT_UPDATE_RESET});\n            history.push('/admin/productList');\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId));\n            } else {\n                setName(product.name);\n                setPrice(product.price);\n                setImage(product.image);\n                setCategory(product.category);\n                setDescription(product.description);\n                setIsCash(product.isCash);\n            }\n        }\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('image', file);\n        setUploading(true);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n            const {data} = await axios.post('/api/upload', formData, config);\n            setImage(data);\n            setUploading(false);\n        } catch (error) {\n            console.error(error);\n            setUploading(false);\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            category,\n            description,\n            image,\n            isCash\n        }));\n    }\n\n    return (\n        <>\n        <Link to='/admin/productList' className='btn btn-light my-3'>Go Back</Link>\n        <FormContainer>\n            <h1>Edit Product</h1>\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loadingUpdate && <Loader />}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                 <Form onSubmit={submitHandler}>\n                 <Form.Group controlID='name'>\n                         <Form.Label>Name</Form.Label>\n                         <Form.Control type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='email'>\n                         <Form.Label>Price</Form.Label>\n                         <Form.Control type='number' placeholder='Price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='image'>\n                         <Form.Label>Image</Form.Label>\n                         <Form.Control type='text' placeholder='Image URL' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\n                        <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler} />\n                        {uploading && <Loader />}\n                     </Form.Group>\n                     <Form.Group controlID='category'>\n                         <Form.Label>Category</Form.Label>\n                         <Form.Control type='text' placeholder='Category' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='description'>\n                         <Form.Label>Description</Form.Label>\n                         <Form.Control type='text' placeholder='Description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\n                     </Form.Group>\n                     <Form.Group controlID='isCash'>\n                         <Form.Label>Is this a Cash product?</Form.Label>\n                        <Form.Check type='switch' id={`isCash-${product.isCash}`} onChange={() => setIsCash(!product.isCash)} checked={product.isCash} />\n                    </Form.Group>\n                     <Button type='submit' variant='primary'>\n                         Update\n                     </Button>\n                     </Form>\n            )}\n        </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen;\n","import React, {useEffect} from 'react'\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {Table, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {listOrders} from '../actions/orderActions';\n\nconst OrderListScreen = ({history}) => {\n   const dispatch = useDispatch();\n   \n   const orderList = useSelector(state => state.orderList);\n   const {loading, error, orders} = orderList;\n\n   const userLogin = useSelector(state => state.userLogin);\n   const {userInfo} = userLogin;\n\n   useEffect(() => {\n       if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n       } else {\n           history.push('/login');\n       }\n   }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>User</th>\n                            <th>Date</th>\n                            <th>Total</th>\n                            <th>Hiker</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>{order.createdAt.substring(0,10)}</td>\n                                <td>${order.totalPrice}</td>\n                        <td>{order.recipient}</td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button variant='light' className='btn-sm'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default OrderListScreen;\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Container} from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScrreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n        <Route path='/order/:id' component={OrderScreen} exact/>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScrreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/cart' component={CartScreen} exact />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id' component={CartScreen} />\n          <Route path='/admin/userList' component={UserListScreen} />\n          <Route path='/admin/productList/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/productList' component={ProductListScreen} exact />\n          <Route path='/admin/orderList' component={OrderListScreen} />\n          <Route path='/admin/products/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/users/:id/edit' component={UserEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport 'react-bootstrap-country-select/dist/react-bootstrap-country-select.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}